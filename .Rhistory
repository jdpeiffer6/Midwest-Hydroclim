dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
i=364
x1=paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
)
x1
i=60
x1=paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
)
x1
for (i in 1:365) {
x1=paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
) #converts date to a type readable by strftime
x = as.numeric(strftime(x1,'%j'))   #converts that to a number
leaps=c("2000|2004|2008|2012|2016")
if(grepl("-2-29",x1)){print(x);x=366
}else if(grepl(leaps,x1) && x>60) {x=x-1}
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
dailyavg = matrix(nrow = 366, ncol = 5, data = 0)   #makes a matrix with a column for every day +1 more for the number of days it was aquired over
for (i in 1:365) {
x1=paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
) #converts date to a type readable by strftime
x = as.numeric(strftime(x1,'%j'))   #converts that to a number
leaps=c("2000|2004|2008|2012|2016")
if(grepl("-2-29",x1)){print(x);x=366
}else if(grepl(leaps,x1) && x>60) {x=x-1}
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
wdata$weath[1:100,]
createPath
61>60
x=61
x>60
getAverages
getAverages = function(wdata) {
dailyavg = matrix(nrow = 366,
ncol = 5,
data = 0)   #makes a matrix with a column for every day +1 more for the number of days it was aquired over
for (i in 1:dim(wdata$weath)[1]) {
x1 = paste(wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-') #converts date to a type readable by strftime
x = as.numeric(strftime(x1, '%j'))   #converts that to a number
leaps = c("2000|2004|2008|2012|2016")
if (grepl("-2-29", x1)) {
print(x)
x = 366
} else if (grepl(leaps, x1) && x > 60) {
x = x - 1
}
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
return(dailyavg)
}
a=getAverages(wdata)
View(a)
a[1,1:4]
a[1,1:4]/a[1,5]
2.54/5
2.54/20
avg=getAverages(wdata)
View(wdata)
View(avg)
getAverages = function(wdata) {
dailyavg = matrix(nrow = 366,
ncol = 5,
data = 0)   #makes a matrix with a column for every day +1 more for the number of days it was aquired over
for (i in 1:dim(wdata$weath)[1]) {
x1 = paste(wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-') #converts date to a type readable by strftime
x = as.numeric(strftime(x1, '%j'))   #converts that to a number
leaps = c("2000|2004|2008|2012|2016")
if (grepl("-2-29", x1)) {
print(x)
x = 366
} else if (grepl(leaps, x1) && x > 60) {
x = x - 1
}
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
for (i in 1:dim(wdata$weath)[1]) {
dailyavg[i, 1:4] = dailyavg[i, 1:4] / dailyavg[i, 5]
}
return(dailyavg)
}
View(avg)
avg=getAverages(wdata)
for (i in 1:dim(wdata$weath)[1]) {
dailyavg[i, 1:4] = dailyavg[i, 1:4] / dailyavg[i, 5]
}
i
getAverages = function(wdata) {
dailyavg = matrix(nrow = 366,
ncol = 5,
data = 0)   #makes a matrix with a column for every day +1 more for the number of days it was aquired over
for (i in 1:dim(wdata$weath)[1]) {
x1 = paste(wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-') #converts date to a type readable by strftime
x = as.numeric(strftime(x1, '%j'))   #converts that to a number
leaps = c("2000|2004|2008|2012|2016")
if (grepl("-2-29", x1)) {
print(x)
x = 366
} else if (grepl(leaps, x1) && x > 60) {
x = x - 1
}
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
for (i in 1:dim(dailyavg)[1]) {
dailyavg[i, 1:4] = dailyavg[i, 1:4] / dailyavg[i, 5]
}
return(dailyavg)
}
avg=getAverages(wdata)
plot(avg[,1])
plot(avg[,2])
plot(avg[,3])
plot(avg[,4])
plot(avg[,5])
plot(avg[,1])
plot(avg[,2])
plot(avg[,3])
plot(avg[,4])
plot(avg[,1])
/booty
hist(rnorm(20))
plot(rnorm(20))
scatter(rnorm(20))
hist(rnorm(20))
hist(rnorm(2000))
hist(rnorm(20000000))
symbols
?symbols
cor.test(1:10,1:10)
cor.test(1:10,1:10+rnorm(10))
plot(1:10,1:10+rnorm(10))
i=366
dailyavg[i, 1:4] = dailyavg[i, 1:4] / dailyavg[i, 5]
avg=getAverages(wdata)
View(avg)
avg[1:4,366]
avg[366,1:4]
avg[366,5]
dim(avg)
avg[366,1:4]/avg[366,5]
getAverages = function(wdata) {
dailyavg = matrix(nrow = 366,
ncol = 5,
data = 0)   #makes a matrix with a column for every day +1 more for the number of days it was aquired over
for (i in 1:dim(wdata$weath)[1]) {
x1 = paste(wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-') #converts date to a type readable by strftime
x = as.numeric(strftime(x1, '%j'))   #converts that to a number
leaps = c("2000|2004|2008|2012|2016")
if (grepl("-2-29", x1)) {
print(x)
x = 366
} else if (grepl(leaps, x1) && x > 60) {
x = x - 1
}
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
for (i in 1:366) {
dailyavg[i, 1:4] = dailyavg[i, 1:4] / dailyavg[i, 5]
}
return(dailyavg)
}
avg=getAverages(wdata)
avg[366,]
plot(avg[,1])
plot(avg[,2])
plot(avg[,3])
plot(avg[,4])
getAverages = function(wdata) {
dailyavg = matrix(nrow = 366,
ncol = 5,
data = 0)   #makes a matrix with a column for every day +1 more for the number of days it was aquired over
for (i in 1:dim(wdata$weath)[1]) {
x1 = paste(wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-') #converts date to a type readable by strftime
x = as.numeric(strftime(x1, '%j'))   #converts that to a number
leaps = c("2000|2004|2008|2012|2016")
if (grepl("-2-29", x1)) {
print(x)
x = 366
} else if (grepl(leaps, x1) && x > 60) {
x = x - 1
}
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
for (i in 1:366) {
print(dailyavg[i,])
dailyavg[i, 1:4] = dailyavg[i, 1:4] / dailyavg[i, 5]
}
return(dailyavg)
}
avg=getAverages(wdata)
74.4/5
getAverages = function(wdata) {
dailyavg = matrix(nrow = 366,
ncol = 5,
data = 0)   #makes a matrix with a column for every day +1 more for the number of days it was aquired over
for (i in 1:dim(wdata$weath)[1]) {
x1 = paste(wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-') #converts date to a type readable by strftime
x = as.numeric(strftime(x1, '%j'))   #converts that to a number
leaps = c("2000|2004|2008|2012|2016")
if (grepl("-2-29", x1)) {
print(x)
x = 366
print(wdata$weath[i, 4:7])
} else if (grepl(leaps, x1) && x > 60) {
x = x - 1
}
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
for (i in 1:366) {
dailyavg[i, 1:4] = dailyavg[i, 1:4] / dailyavg[i, 5]
}
return(dailyavg)
}
avg=getAverages(wdata)
getAverages
library(xlsx)
?write.xlsx''
?write.xlsx
names(wdata$weath)
head(wdata$weath)
colnames(avg)=c("Daily Percipation (mm)","Max Temp (C)","Min Temp (C)","Avg Temp (C)","Days in average")
View(avg)
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
xcelpath='C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Documents\\avgData.xlsx'
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
name=load(i)
avg=getAverages(wdata)
colnames(avg)=c("Daily Percipation (mm)","Max Temp (C)","Min Temp (C)","Avg Temp (C)","Days in average")
xlsx.write(avg,file=xcelpath,col.names=T,sheeName=i)
save(file=i,wdata,avg)
}
getAverages = function(wdata) {
dailyavg = matrix(nrow = 366,
ncol = 5,
data = 0)   #makes a matrix with a column for every day +1 more for the number of days it was aquired over
for (i in 1:dim(wdata$weath)[1]) {
x1 = paste(wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-') #converts date to a type readable by strftime
x = as.numeric(strftime(x1, '%j'))   #converts that to a number
leaps = c("2000|2004|2008|2012|2016")
if (grepl("-2-29", x1)) {
x = 366
} else if (grepl(leaps, x1) && x > 60) {
x = x - 1
}
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
for (i in 1:366) {
dailyavg[i, 1:4] = dailyavg[i, 1:4] / dailyavg[i, 5]
}
return(dailyavg)
}
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
xcelpath='C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Documents\\avgData.xlsx'
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
name=load(i)
avg=getAverages(wdata)
colnames(avg)=c("Daily Percipation (mm)","Max Temp (C)","Min Temp (C)","Avg Temp (C)","Days in average")
write.xlsx(avg,file=xcelpath,col.names=T,sheeName=i)
save(file=i,wdata,avg)
}
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
xcelpath='C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Documents\\avgData.xlsx'
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
name=load(i)
avg=getAverages(wdata)
colnames(avg)=c("Daily Percipation (mm)","Max Temp (C)","Min Temp (C)","Avg Temp (C)","Days in average")
write.xlsx(avg,file=xcelpath,col.names=T,sheetName=i)
save(file=i,wdata,avg)
}
i
wdata
dim(wdata$percip)
dir()
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
name=load(i)
print(names(wdata))
# print(sum(is.na(wdata$weath))/7)
#for(i in 1:dim(wdata$weath)[1]){
#if(sum(is.na(wdata$weath[i,]))>0){print(wdata$weath[i,])}}
}
for(i in 6){
path=createPath(stations,i)
a=getParkData(path)
cat(paste(round(100*i/39),'% '))
}
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
name=load(i)
print(names(wdata))
# print(sum(is.na(wdata$weath))/7)
#for(i in 1:dim(wdata$weath)[1]){
#if(sum(is.na(wdata$weath[i,]))>0){print(wdata$weath[i,])}}
}
path=createPath(stations,i)
i
i=6
path=createPath(stations,i)
path
i
stations
stations$Link
load("~/GitHub/StateParks/Data/stations.Rdata")
stations$Link
for(i in 31){          #this is a useful test to see if things work
browseURL(createPath(stations,i))
}
#useful to check what files contain NA
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
stations$base
createPath(stations,33)
stations$base[6]='http://agebb.missouri.edu/weather/history/report.asp?station_prefix=but'
createPath(stations,33)
createPath(stations,6)
getwd()
save(stations,file='stations.Rdata')
##this code I used to run the getParkData() function on all of the links and make sure it was returning the right data!
for(i in 6){
path=createPath(stations,i)
a=getParkData(path)
cat(paste(round(100*i/39),'% '))
}
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
xcelpath='C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Documents\\avgData.xlsx'
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
name=load(i)
avg=getAverages(wdata)
colnames(avg)=c("Daily Percipation (mm)","Max Temp (C)","Min Temp (C)","Avg Temp (C)","Days in average")
write.xlsx(avg,file=xcelpath,col.names=T,append=T,sheetName=i)
save(file=i,wdata,avg)
}
i
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
xcelpath='C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Documents\\avgData.xlsx'
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
name=load(i)
avg=getAverages(wdata)
colnames(avg)=c("Daily Percipation (mm)","Max Temp (C)","Min Temp (C)","Avg Temp (C)","Days in average")
write.xlsx(avg,file=xcelpath,col.names=T,append=T,sheetName=i)
save(file=i,wdata,avg)
}
?addDataFrame
xcelpath
wdata$meta
write.xlsx(wdata$meta,file=xcelpath,append=T,sheetName=i,startColumn=7)
?read.xlsx
?write.xlsx
?addDataFrame
write.xlsx2(wdata$meta,file=xcelpath,append=T,sheetName=i,startColumn=7)
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
name=load(i)
print(wdata$meta$description)
# print(sum(is.na(wdata$weath))/7)
#for(i in 1:dim(wdata$weath)[1]){
#if(sum(is.na(wdata$weath[i,]))>0){print(wdata$weath[i,])}}
}
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
name=load(i)
print(wdata$meta$station)
print(wdata$meta$description)
# print(sum(is.na(wdata$weath))/7)
#for(i in 1:dim(wdata$weath)[1]){
#if(sum(is.na(wdata$weath[i,]))>0){print(wdata$weath[i,])}}
}
a[i,1]=wdata$meta$station
#useful to check what files contain NA
a=matrix(nrow=39,ncol=2)
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
name=load(i)
a[i,1]=wdata$meta$station
a[i,2]=wdata$meta$description
# print(sum(is.na(wdata$weath))/7)
#for(i in 1:dim(wdata$weath)[1]){
#if(sum(is.na(wdata$weath[i,]))>0){print(wdata$weath[i,])}}
}
wdata$meta$station
wdata$meta$description
a[i,1]=wdata$meta$station
a
#useful to check what files contain NA
a=matrix(nrow=39,ncol=2,data=' ')
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
name=load(i)
a[i,1]=wdata$meta$station
a[i,2]=wdata$meta$description
# print(sum(is.na(wdata$weath))/7)
#for(i in 1:dim(wdata$weath)[1]){
#if(sum(is.na(wdata$weath[i,]))>0){print(wdata$weath[i,])}}
}
wdata$meta$station
a[1,1]="potato"
#useful to check what files contain NA
a=matrix(nrow=39,ncol=2,data=' ')
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
name=load(i)
a[i,1]=toString(wdata$meta$station)
a[i,2]=toString(wdata$meta$description)
# print(sum(is.na(wdata$weath))/7)
#for(i in 1:dim(wdata$weath)[1]){
#if(sum(is.na(wdata$weath[i,]))>0){print(wdata$weath[i,])}}
}
i
a=matrix(nrow=39,ncol=2)
j=0
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
j=j+1
name=load(i)
a[j,1]=wdata$meta$station
a[j,2]=wdata$meta$description
# print(sum(is.na(wdata$weath))/7)
#for(i in 1:dim(wdata$weath)[1]){
#if(sum(is.na(wdata$weath[i,]))>0){print(wdata$weath[i,])}}
}
a
write.xlsx(a,file=xcelpath,col.names = F,row.names = F,sheetName='metadata')
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
xcelpath='C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Documents\\avgData.xlsx'
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
name=load(i)
#avg=getAverages(wdata)
#colnames(avg)=c("Daily Percipation (mm)","Max Temp (C)","Min Temp (C)","Avg Temp (C)","Days in average")
write.xlsx(avg,file=xcelpath,col.names=T,append=T,sheetName=i)
save(file=i,wdata,avg)
}
i
write.xlsx(a,file=xcelpath,col.names = F,row.names = F,sheetName='metadata',append=T)
write.xlsx(a,file=xcelpath,col.names = F,row.names = F,sheetName='metadata',append=T)
library(xlsx)
write.xlsx(a,file=xcelpath,col.names = F,row.names = F,sheetName='metadata',append=T)
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
xcelpath='C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Documents\\avgData.xlsx'
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
name=load(i)
#avg=getAverages(wdata)
#colnames(avg)=c("Daily Percipation (mm)","Max Temp (C)","Min Temp (C)","Avg Temp (C)","Days in average")
write.xlsx(avg,file=xcelpath,col.names=T,append=T,sheetName=i)
save(file=i,wdata,avg)
}
plot(rnorm(10))
cor.test(1:10,1:10)
plot(1:10,1:10)
plot(wdata$weath)
plot(wdata$weath[,2])
wdata$weath[,2]
plot(avg[,2])
wdata$meta
names(wdata$weath)
?names
plot(avg[,1])
plot(avg[,1])
3
plot(avg[,3])
plot(avg[,4])
plot(avg[,3])
plot(avg[,2])
plot(avg[,1])
plot(avg[,4])
plot(avg[,5])
