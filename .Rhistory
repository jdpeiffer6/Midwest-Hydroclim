rm(meta)
setwd('C:\\Users\\JD\\Documents\\College\\StateParks\\Data')
load(dir()[1])
pdata$meta
pdata$percip$inches
plot(pdata$percip$inches)
install.packages("hydroTSM")
install.packages("climdex.pcic")
library(climdex.pcic)
ls()
library(climdex.pcic)
install.packages("C:/Users/JD/Downloads/RClimDex-1.1.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/JD/Downloads/RClimDex-1.1.tar.gz", repos = NULL, type = "source")
climdex.cwd
?climdex.cwd
setwd("C:\\Users\\JD\\Documents\\College\\StateParks\\Data")
ls()
dir()
load(dir()[1])
names(pdata)
pdata$percip
names(pdata$percip)
climdexInput.raw
tmax.dates <- as.PCICt(do.call(paste, ec.1018935.tmax[,c("year", "jday")]), format="%Y %j", cal="gregorian")
tmax.dates
names(pdata)
dataFormat=function(df){
#correctly formats the dates for use in climdex
pdata$percip$date=paste(pdata$year,pdata$month,pdata$day,sep="-")
}
test=dateFormat(pdata)
dateFormat=function(df){
#correctly formats the dates for use in climdex
pdata$percip$date=paste(pdata$year,pdata$month,pdata$day,sep="-")
}
test=dateFormat(pdata)
dateFormat=function(df){
#correctly formats the dates for use in climdex
df$percip$date=paste(df$year,df$month,df$day,sep="-")
}
test=dateFormat(pdata)
rm(dataFormat)
df=pdata
df$percip$date=paste(df$year,df$month,df$day,sep="-")
#correctly formats the dates for use in climdex
df$percip$date=NA
df$perci
df$percip
df$percip$date=paste(df$year,df$month,df$day,sep="-")
df$percip$date
df$percip$date[1]
df$year
df$percip$date=paste(df$percip$year,df$percip$month,df$percip$day,sep="-")
df$percip$date
dateFormat=function(df){
#correctly formats the dates for use in climdex
df$percip$date=NA
df$percip$date=paste(df$percip$year,df$percip$month,df$percip$day,sep="-")
drops <- c("year","month","day")
df[ , !(names(df) %in% drops)]
return(df)
}
names(pdata$percip)
test=dateFormat(pdata)
dateFormat=function(df){
#correctly formats the dates for use in climdex
df$percip$date=NA
df$percip$date=paste(df$percip$year,df$percip$month,df$percip$day,sep="-")
drops <- c("year","month","day")
df$percip[ , !(names(df$percip) %in% drops)]
return(df)
}
test=dateFormat(pdata)
names(test)
names(test$percip)
head(test$percip)
test$percip$date
dateFormat=function(df){
#correctly formats the dates for use in climdex
df$percip$date=NA
df$percip$date=paste(df$percip$year,df$percip$month,df$percip$day,sep="-")
drops <- c("year","month","day")
df$percip <- subset(df$percip, select = -c("day"))
return(df)
}
test=dateFormat(pdata)
dateFormat=function(df){
#correctly formats the dates for use in climdex
df$percip$date=NA
df$percip$date=paste(df$percip$year,df$percip$month,df$percip$day,sep="-")
drops <- c("year","month","day")
df$percip <- subset(df$percip, select = -c("day","month"))
return(df)
}
test=dateFormat(pdata)
dateFormat=function(df){
#correctly formats the dates for use in climdex
df$percip$date=NA
df$percip$date=paste(df$percip$year,df$percip$month,df$percip$day,sep="-")
df$percip <- subset(df$percip, select = -c(day))
return(df)
}
test=dateFormat(pdata)
test$percip
names(test$percip)
dateFormat=function(df){
#correctly formats the dates for use in climdex
df$percip$date=NA
df$percip$date=paste(df$percip$year,df$percip$month,df$percip$day,sep="-")
df$percip <- subset(df$percip, select = -c(day,month,year))
return(df)
}
names(test$percip)
names(test$percip)
test=dateFormat(pdata)
names(test$percip)
pdata=dateFormat(pdata)
names(pdata)
names(pdata$percip)
head(pdata$percip)
tmax.dates
prec.dates <- as.PCICt(do.call(paste, ec.1018935.prec[,c("year", "jday")]), format="%Y %j", cal="gregorian")
head(prec.dates)
ec.1018935.prec$ONE_DAY_PRECIPITATION
ec.1018935.tmax$MAX_TEMP
climdex.input.raw(pdata$percip$inches,pdata$percip$date,base.range=c(2000,2019))
climdexInput.raw(pdata$percip$inches,pdata$percip$date,base.range=c(2000,2019))
ec.1018935
climdexInput.raw(prec=pdata$percip$inches,perc.dates=pdata$percip$date,base.range=c(2000,2019))
climdexInput.raw(prec=pdata$percip$inches,prec.dates=pdata$percip$date,base.range=c(2000,2019))
climdexInput(data=pdata$percip$inches,dates=pdata$percip$date,base.range=c(2000,2019))
climdexInput.raw(prec=pdata$percip$inches,prec.dates=pdata$percip$date,base.range=c(2000,2019))
as.PCICt()
as.PCICt
?as.PCICt
climdexInput.raw(prec=pdata$percip$inches,prec.dates=as.PCICt(pdata$percip$date),base.range=c(2000,2019))
??as.PCICt
as.PCICt(pdata$percip$date)
as.PCICt(pdata$percip$date,cal="365_daty")
as.PCICt(pdata$percip$date,cal="365_day")
climdexInput.raw(prec=pdata$percip$inches,prec.dates=as.PCICt(pdata$percip$date,cal="365_day"),base.range=c(2000,2019))
ci=climdexInput.raw(prec=pdata$percip$inches,prec.dates=as.PCICt(pdata$percip$date,cal="365_day"),base.range=c(2000,2019))
names(ci)
ci
climdex.cwd(ci)
xlsx.read
library(xlsx)
library(xlsx)
C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Documents\\Links.xlsx
'C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Documents\\Links.xlsx'
excelpath='C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Documents\\Links.xlsx'
test=xlsx.read(excelpath)
test=read.xlsx(excelpath)
test=read.xlsx(excelpath,1)
test
typeof(test)
names(test)
test=read.xlsx(excelpath,1)
names(test)
test$Link
stations=test
View(test)
rm(test)
stations$Link[1]
stations$Link[2]
substr(stations$Link[2],1,100)
substr(stations$Link[1],1,100)
substr(stations$Link[1],80)
substr(stations$Link[1],1,80)
substr(stations$Link[1],1,73)
substr(stations$Link[1],1,1)
substr(stations$Link[1],1,71)
stations$base=substr(stations$Link,1,71)
stations$base
stations$base[33]='http://agebb.missouri.edu/weather/history/report.asp?station_prefix=sen'
stations$base
station$time=
'&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019
'
'&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019'
stations$time=rep("&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019",39)
stations$time
'&period_type=1&convert=1&field_elements=70'
'&period_type=1&convert=2&field_elements=70'
stations$type='&period_type=1&convert=2'
stations$type=rep('&period_type=1&convert=2',39)
stations$type
stations$measures=
'&field_elements=70&field_elements=3&field_elements=51&field_elements=23'
stations$measures=rep('&field_elements=70&field_elements=3&field_elements=51&field_elements=23',39)
stations$measures
getwd()
setwd("C:/Users/JD/Documents/GitHub/StateParks/Data")
save(stations,file="stations")
save(stations,file="stations.Rdata")
stations
names(stations)
stations$Location
paste(stations$base[1],stations$time[1],stations$type[1],stations$measures)
paste(stations$base[1],stations$time[1],stations$type[1],stations$measures[1])
j=1
paste(stations$base[j],stations$time[j],stations$type[j],stations$measures[j])
paste(stations$base[j],stations$time[j],stations$type[j],stations$measures[j],sep='')
j=2
paste(stations$base[j],stations$time[j],stations$type[j],stations$measures[j],sep='')
j=3
paste(stations$base[j],stations$time[j],stations$type[j],stations$measures[j],sep='')
getPercipData=function(path){
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data=readLines(path)
metastart=grep("Weather Station",data)
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
title=grep("YEAR",data)
end=grep("Total:",data)
percip=data.frame(month=rep(NA,end-title-9),day=rep(NA,end-title-9),year=rep(NA,end-title-9),maxtemp=rep(NA,end-title-9),mintemp=rep(NA,end-title-9),avgtemp=rep(NA,end-title-9),percip=rep(NA,end-title-9))
rownames(percip)=NULL
for(i in (title+3):(end-3)){
if(grepl("No Data",data[i])){next}
percip[i-2-title,]=as.numeric(strsplit(data[i],'      ')[[1]][2:8])
}
percip = percip[complete.cases(percip),]
pdata=list(meta=meta,percip=percip)
c=getwd();setwd("C:\\Users\\JD\\Desktop")
save(pdata,file=paste(meta$station,'Rdata',sep='.'));setwd(c)
return(pdata)
}
path=paste(stations$base[j],stations$time[j],stations$type[j],stations$measures[j],sep='')
test=getPercipData(path)
test
j
test$meta
test=getPercipData(path)
test$meta
getPercipData=function(path){
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data=readLines(path)
metastart=grep("Weather Station",data)
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
start=F
title=grep("YEAR",data)
end=grep("Total:",data)
percip=data.frame(month=rep(NA,end-title-9),day=rep(NA,end-title-9),year=rep(NA,end-title-9),maxtemp=rep(NA,end-title-9),mintemp=rep(NA,end-title-9),avgtemp=rep(NA,end-title-9),percip=rep(NA,end-title-9))
rownames(percip)=NULL
for(i in (title+3):(end-3)){
if(grepl("No Data",data[i])){next}
if(start=F){meta$begin=paste(strsplit(data[i],'      ')[[1]][2:4]);start=T}
percip[i-2-title,]=as.numeric(strsplit(data[i],'      ')[[1]][2:8])
}
percip = percip[complete.cases(percip),]
pdata=list(meta=meta,percip=percip)
c=getwd();setwd("C:\\Users\\JD\\Desktop")
save(pdata,file=paste(meta$station,'Rdata',sep='.'));setwd(c)
return(pdata)
}
getPercipData=function(path){
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data=readLines(path)
metastart=grep("Weather Station",data)
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
start=F
title=grep("YEAR",data)
end=grep("Total:",data)
percip=data.frame(month=rep(NA,end-title-9),day=rep(NA,end-title-9),year=rep(NA,end-title-9),maxtemp=rep(NA,end-title-9),mintemp=rep(NA,end-title-9),avgtemp=rep(NA,end-title-9),percip=rep(NA,end-title-9))
rownames(percip)=NULL
for(i in (title+3):(end-3)){
if(grepl("No Data",data[i])){next}
if(start==F){meta$begin=paste(strsplit(data[i],'      ')[[1]][2:4]);start=T}
percip[i-2-title,]=as.numeric(strsplit(data[i],'      ')[[1]][2:8])
}
percip = percip[complete.cases(percip),]
pdata=list(meta=meta,percip=percip)
c=getwd();setwd("C:\\Users\\JD\\Desktop")
save(pdata,file=paste(meta$station,'Rdata',sep='.'));setwd(c)
return(pdata)
}
test=getPercipData(path)
test$meta
getPercipData=function(path){
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data=readLines(path)
metastart=grep("Weather Station",data)
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
start=F
title=grep("YEAR",data)
end=grep("Total:",data)
percip=data.frame(month=rep(NA,end-title-9),day=rep(NA,end-title-9),year=rep(NA,end-title-9),maxtemp=rep(NA,end-title-9),mintemp=rep(NA,end-title-9),avgtemp=rep(NA,end-title-9),percip=rep(NA,end-title-9))
rownames(percip)=NULL
for(i in (title+3):(end-3)){
if(grepl("No Data",data[i])){next}
if(start==F){meta$begin=paste(strsplit(data[i],'      ')[[1]][2:4],sep='');start=T}
percip[i-2-title,]=as.numeric(strsplit(data[i],'      ')[[1]][2:8])
}
percip = percip[complete.cases(percip),]
pdata=list(meta=meta,percip=percip)
c=getwd();setwd("C:\\Users\\JD\\Desktop")
save(pdata,file=paste(meta$station,'Rdata',sep='.'));setwd(c)
return(pdata)
}
test=getPercipData(path)
test$meta
getPercipData=function(path){
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data=readLines(path)
metastart=grep("Weather Station",data)
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
start=F
title=grep("YEAR",data)
end=grep("Total:",data)
percip=data.frame(month=rep(NA,end-title-9),day=rep(NA,end-title-9),year=rep(NA,end-title-9),maxtemp=rep(NA,end-title-9),mintemp=rep(NA,end-title-9),avgtemp=rep(NA,end-title-9),percip=rep(NA,end-title-9))
rownames(percip)=NULL
for(i in (title+3):(end-3)){
if(grepl("No Data",data[i])){next}
if(start==F){meta$begin=paste(strsplit(data[i],'      ')[[1]][2],strsplit(data[i],'      ')[[1]][3],strsplit(data[i],'      ')[[1]][4],sep='');start=T}
percip[i-2-title,]=as.numeric(strsplit(data[i],'      ')[[1]][2:8])
}
percip = percip[complete.cases(percip),]
pdata=list(meta=meta,percip=percip)
c=getwd();setwd("C:\\Users\\JD\\Desktop")
save(pdata,file=paste(meta$station,'Rdata',sep='.'));setwd(c)
return(pdata)
}
test=getPercipData(path)
test$meta
getPercipData=function(path){
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data=readLines(path)
metastart=grep("Weather Station",data)
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
start=F
title=grep("YEAR",data)
end=grep("Total:",data)
percip=data.frame(month=rep(NA,end-title-9),day=rep(NA,end-title-9),year=rep(NA,end-title-9),maxtemp=rep(NA,end-title-9),mintemp=rep(NA,end-title-9),avgtemp=rep(NA,end-title-9),percip=rep(NA,end-title-9))
rownames(percip)=NULL
for(i in (title+3):(end-3)){
if(grepl("No Data",data[i])){next}
if(start==F){meta$begin=paste(strsplit(data[i],'      ')[[1]][2],strsplit(data[i],'      ')[[1]][3],strsplit(data[i],'      ')[[1]][4],sep='/');start=T}
percip[i-2-title,]=as.numeric(strsplit(data[i],'      ')[[1]][2:8])
}
percip = percip[complete.cases(percip),]
pdata=list(meta=meta,percip=percip)
c=getwd();setwd("C:\\Users\\JD\\Desktop")
save(pdata,file=paste(meta$station,'Rdata',sep='.'));setwd(c)
return(pdata)
}
test$meta
test=getPercipData(path)
test$meta
getPercipData=function(path){
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data=readLines(path)
metastart=grep("Weather Station",data)
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
start=F
title=grep("YEAR",data)
end=grep("Total:",data)
percip=data.frame(month=rep(NA,end-title-9),day=rep(NA,end-title-9),year=rep(NA,end-title-9),maxtemp=rep(NA,end-title-9),mintemp=rep(NA,end-title-9),avgtemp=rep(NA,end-title-9),percip=rep(NA,end-title-9))
rownames(percip)=NULL
for(i in (title+3):(end-3)){
if(grepl("No Data",data[i])){next}
if(start==F){meta$begin=paste(strsplit(data[i],'      ')[[1]][2],strsplit(data[i],'      ')[[1]][3],strsplit(data[i],'      ')[[1]][4],sep='/');start=T;beign=sub(' ','',meta$beign)}
percip[i-2-title,]=as.numeric(strsplit(data[i],'      ')[[1]][2:8])
}
percip = percip[complete.cases(percip),]
pdata=list(meta=meta,percip=percip)
c=getwd();setwd("C:\\Users\\JD\\Desktop")
save(pdata,file=paste(meta$station,'Rdata',sep='.'));setwd(c)
return(pdata)
}
test=getPercipData(path)
test$meta
if(start==F){meta$begin=paste(strsplit(data[i],'      ')[[1]][2],strsplit(data[i],'      ')[[1]][3],strsplit(data[i],'      ')[[1]][4],sep='/');start=T;meta$beign=sub(' ','',meta$beign)}
getPercipData=function(path){
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data=readLines(path)
metastart=grep("Weather Station",data)
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
start=F
title=grep("YEAR",data)
end=grep("Total:",data)
percip=data.frame(month=rep(NA,end-title-9),day=rep(NA,end-title-9),year=rep(NA,end-title-9),maxtemp=rep(NA,end-title-9),mintemp=rep(NA,end-title-9),avgtemp=rep(NA,end-title-9),percip=rep(NA,end-title-9))
rownames(percip)=NULL
for(i in (title+3):(end-3)){
if(grepl("No Data",data[i])){next}
if(start==F){meta$begin=paste(strsplit(data[i],'      ')[[1]][2],strsplit(data[i],'      ')[[1]][3],strsplit(data[i],'      ')[[1]][4],sep='/');start=T;meta$beign=sub(' ','',meta$beign)}
percip[i-2-title,]=as.numeric(strsplit(data[i],'      ')[[1]][2:8])
}
percip = percip[complete.cases(percip),]
pdata=list(meta=meta,percip=percip)
c=getwd();setwd("C:\\Users\\JD\\Desktop")
save(pdata,file=paste(meta$station,'Rdata',sep='.'));setwd(c)
return(pdata)
}
test=getPercipData(path)
test$meta
path
getPercipData(path)
getPercipData=function(path){
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data=readLines(path)
metastart=grep("Weather Station",data)
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
start=F
title=grep("YEAR",data)
end=grep("Total:",data)    #fix the sub command
percip=data.frame(month=rep(NA,end-title-9),day=rep(NA,end-title-9),year=rep(NA,end-title-9),maxtemp=rep(NA,end-title-9),mintemp=rep(NA,end-title-9),avgtemp=rep(NA,end-title-9),percip=rep(NA,end-title-9))
rownames(percip)=NULL
for(i in (title+3):(end-3)){
if(grepl("No Data",data[i])){next}
if(start==F){meta$begin=paste(gsub(" ","",strsplit(data[i],'      ')[[1]][2]),gsub(" ","",strsplit(data[i],'      ')[[1]][3]),gsub(" ","",strsplit(data[i],'      ')[[1]][4]),sep='/');start=T}
percip[i-2-title,]=as.numeric(strsplit(data[i],'      ')[[1]][2:8])
}
percip = percip[complete.cases(percip),]
pdata=list(meta=meta,percip=percip)
c=getwd();setwd("C:\\Users\\JD\\Desktop")
save(pdata,file=paste(meta$station,'Rdata',sep='.'));setwd(c)
return(pdata)
}
getPercipData(path)
?readLines
getPercipData=function(path){
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data=readLines(path) #this grabs the text from the html connection
metastart=grep("Weather Station",data)   #finds the start of the metadata
#makes the metadata list
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
start=F       #the start date is not always the true start, this will be used later to find it
title=grep("YEAR",data)   #this line and the next define where the data starts to be listed and ends
end=grep("Total:",data)
#makes a data frame of specific length
percip=data.frame(month=rep(NA,end-title-9),day=rep(NA,end-title-9),year=rep(NA,end-title-9),maxtemp=rep(NA,end-title-9),mintemp=rep(NA,end-title-9),avgtemp=rep(NA,end-title-9),percip=rep(NA,end-title-9))
rownames(percip)=NULL
#this goes through every line, if there is no data, it skips that line and records where the data starts
for(i in (title+3):(end-3)){
if(grepl("No Data",data[i])){next} #skips, below line records date of data start
if(start==F){meta$begin=paste(gsub(" ","",strsplit(data[i],'      ')[[1]][2]),gsub(" ","",strsplit(data[i],'      ')[[1]][3]),gsub(" ","",strsplit(data[i],'      ')[[1]][4]),sep='/');start=T}
percip[i-2-title,]=as.numeric(strsplit(data[i],'      ')[[1]][2:8])
}
percip = percip[complete.cases(percip),] #removes lines without a complete dataset, not sure if this should exist
pdata=list(meta=meta,percip=percip)    #output dataframe
c=getwd();setwd("C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data")
save(pdata,file=paste(meta$station,'Rdata',sep='.'));setwd(c)
return(pdata)
}
getPercipData(path)
links
stations
names(stations)
createPath=function(df,num){
return(paste(df$base,df$time,df$type,df$measures))
}
createPath(stations,1)
createPath=function(df,num){
return(paste(df$base[num],df$time[num],df$type[num],df$measures[num]))
}
createPath(stations,1)
createPath=function(df,num){
return(paste(df$base[num],df$time[num],df$type[num],df$measures[num]),sep='')
}
createPath=function(df,num){
return(paste(df$base[num],df$time[num],df$type[num],df$measures[num]),sep='')
}
createPath(stations,1)
createPath=function(df,num){
return(paste(df$base[num],df$time[num],df$type[num],df$measures[num],sep=''))
}
createPath(stations,1)
for(i in 1:39){
browseURL(createPath(stations,i))
}
for(i in 32:dim(links)[1]){
if(links[i,3]!='NA'){
path=createPath(stations,i)
a=getParkData(path)}
}
getParkData=function(path){
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data=readLines(path) #this grabs the text from the html connection
metastart=grep("Weather Station",data)   #finds the start of the metadata
#makes the metadata list
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
start=F       #the start date is not always the true start, this will be used later to find it
title=grep("YEAR",data)   #this line and the next define where the data starts to be listed and ends
end=grep("Total:",data)
#makes a data frame of specific length
percip=data.frame(month=rep(NA,end-title-9),day=rep(NA,end-title-9),year=rep(NA,end-title-9),maxtemp=rep(NA,end-title-9),mintemp=rep(NA,end-title-9),avgtemp=rep(NA,end-title-9),percip=rep(NA,end-title-9))
rownames(percip)=NULL
#this goes through every line, if there is no data, it skips that line and records where the data starts
for(i in (title+3):(end-3)){
if(grepl("No Data",data[i])){next} #skips, below line records date of data start
if(start==F){meta$begin=paste(gsub(" ","",strsplit(data[i],'      ')[[1]][2]),gsub(" ","",strsplit(data[i],'      ')[[1]][3]),gsub(" ","",strsplit(data[i],'      ')[[1]][4]),sep='/');start=T}
percip[i-2-title,]=as.numeric(strsplit(data[i],'      ')[[1]][2:8])
}
percip = percip[complete.cases(percip),] #removes lines without a complete dataset, not sure if this should exist
pdata=list(meta=meta,percip=percip)    #output dataframe
c=getwd();setwd("C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data")
save(pdata,file=paste(meta$station,'Rdata',sep='.'));setwd(c)
return(pdata)
}
for(i in 32:dim(links)[1]){
if(links[i,3]!='NA'){
path=createPath(stations,i)
a=getParkData(path)}
}
warnnings()
warnings()
dim(links)
for(i in 1:39){
if(links[i,3]!='NA'){
path=createPath(stations,i)
a=getParkData(path)}
}
warnings()
