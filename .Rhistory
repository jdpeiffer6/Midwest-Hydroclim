dailyavg=matrix(nrow=366,ncol=5)*0
dailyavg
dailyavg=matrix(nrow=366,ncol=5,data=0)
dailyavg
i=1
x=as.numeric(strftime(paste(pdata$percip$year[i],pdata$percip$month[i],pdata$percip$day[i],sep='-'),"%j"))
x
pdata$percip[i,4:7]
dailyavg[x,1:4]
pdata$percip[i,4:7]+dailyavg[x,1:4]
as.numeric(pdata$percip[i,4:7])
as.numeric(pdata$percip[i,4:7])+dailyavg[x,1:4]
dailyavg[x,1:4]
dailyavg[x,1:4]=as.numeric(pdata$percip[i,4:7])+dailyavg[x,1:4]
dailyavg[x,1:4]
dailyavg[x,1:4]=as.numeric(pdata$percip[i,4:7])+dailyavg[x,1:4]
dailyavg[x,1:4]
dailyavg=matrix(nrow=366,ncol=5,data=0)
for(i in 1:dim(pdata$percip)[1]){
x=as.numeric(strftime(paste(pdata$percip$year[i],pdata$percip$month[i],pdata$percip$day[i],sep='-'),"%j"))
dailyavg[x,1:4]=as.numeric(pdata$percip[i,4:7])+dailyavg[x,1:4]
dailyavg[x,5]=dailyavg[x,5]+1
}
dailyavg
View(dailyavg)
strftime("2016-02-29")
strftime("2016-02-29","%j")
strftime("2017-02-29","%j")
strftime("2024-02-29","%j")
as.numeric("060")
dailyavg=matrix(nrow=366,ncol=5,data=0)
for(i in 1:10){
x=as.numeric(strftime(paste(pdata$percip$year[i],pdata$percip$month[i],pdata$percip$day[i],sep='-'),"%j"))
dailyavg[x,1:4]=as.numeric(pdata$percip[i,4:7])+dailyavg[x,1:4]
dailyavg[x,5]=dailyavg[x,5]+1
}
View(dailyavg)
pdata$meta
i=1
path=createPath(stations,i)
path
a=getParkData(path)
head(a$percip)
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data=readLines(path) #this grabs the text from the html connection
length(data)
data[1:50]
getParkData = function(path) {
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data = readLines(path) #this grabs the text from the html connection
metastart = grep("Weather Station", data)   #finds the start of the metadata
#makes the metadata list
meta = list(
station = strsplit(strsplit(data[metastart + 1], '>')[[1]][3], '<')[[1]][1],
description = strsplit(strsplit(data[metastart + 3], '>')[[1]][3], '<')[[1]][1],
begin = strsplit(strsplit(data[metastart + 5], '>')[[1]][3], '<')[[1]][1],
end = strsplit(strsplit(data[metastart + 7], '>')[[1]][3], '<')[[1]][1]
)
start = F       #the start date is not always the true start, this will be used later to find it
title = grep("YEAR", data)   #this line and the next define where the data starts to be listed and ends
end = grep("Total:", data)
#makes a data frame of specific length
percip = data.frame(
month = rep(NA, end - title - 9),
day = rep(NA, end - title - 9),
year = rep(NA, end - title - 9),
maxtemp = rep(NA, end - title - 9),
mintemp = rep(NA, end - title - 9),
avgtemp = rep(NA, end - title - 9),
percip = rep(NA, end - title - 9)
)
rownames(percip) = NULL
#this goes through every line, if there is no data, it skips that line and records where the data starts
for (i in (title + 3):(end - 3)) {
if (grepl("No Data", data[i])) {
next
} #skips, below line records date of data start
if (start == F) {
meta$begin = paste(
gsub(" ", "", strsplit(data[i], '      ')[[1]][2]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][3]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][4]),
sep = '/'
)
start = T
}
percip[i - 2 - title, ] = as.numeric(strsplit(data[i], '      ')[[1]][2:8])
}
#percip = percip[complete.cases(percip), ] #removes lines without a complete dataset, not sure if this should exist
pdata = list(meta = meta, percip = percip)    #output dataframe
c = getwd()
setwd("C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data")
save(pdata, file = paste(meta$station, 'Rdata', sep = '.'))
setwd(c)
return(pdata)
}
path
a=getParkData(path)
head(a$percip)
getParkData = function(path) {
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data = readLines(path) #this grabs the text from the html connection
metastart = grep("Weather Station", data)   #finds the start of the metadata
#makes the metadata list
meta = list(
station = strsplit(strsplit(data[metastart + 1], '>')[[1]][3], '<')[[1]][1],
description = strsplit(strsplit(data[metastart + 3], '>')[[1]][3], '<')[[1]][1],
begin = strsplit(strsplit(data[metastart + 5], '>')[[1]][3], '<')[[1]][1],
end = strsplit(strsplit(data[metastart + 7], '>')[[1]][3], '<')[[1]][1]
)
start = F       #the start date is not always the true start, this will be used later to find it
title = grep("YEAR", data)   #this line and the next define where the data starts to be listed and ends
end = grep("Total:", data)
#makes a data frame of specific length
percip = data.frame(
month = rep(NA, end - title - 9),
day = rep(NA, end - title - 9),
year = rep(NA, end - title - 9),
maxtemp = rep(NA, end - title - 9),
mintemp = rep(NA, end - title - 9),
avgtemp = rep(NA, end - title - 9),
percip = rep(NA, end - title - 9)
)
rownames(percip) = NULL
#this goes through every line, if there is no data, it skips that line and records where the data starts
for (i in (title + 3):(end - 3)) {
if (grepl("No Data", data[i])) {
next
} #skips, below line records date of data start
if (start == F) {
meta$begin = paste(
gsub(" ", "", strsplit(data[i], '      ')[[1]][2]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][3]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][4]),
sep = '/'
)
start = T
}
percip[i - 2 - title, ] = as.numeric(strsplit(data[i], '    ')[[1]][2:8])
}
pdata = list(meta = meta, percip = percip)    #output dataframe
c = getwd()
setwd("C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data")
save(pdata, file = paste(meta$station, 'Rdata', sep = '.'))
setwd(c)
return(pdata)
}
a=getParkData(path)
head(a$percip)
getParkData = function(path) {
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data = readLines(path) #this grabs the text from the html connection
metastart = grep("Weather Station", data)   #finds the start of the metadata
#makes the metadata list
meta = list(
station = strsplit(strsplit(data[metastart + 1], '>')[[1]][3], '<')[[1]][1],
description = strsplit(strsplit(data[metastart + 3], '>')[[1]][3], '<')[[1]][1],
begin = strsplit(strsplit(data[metastart + 5], '>')[[1]][3], '<')[[1]][1],
end = strsplit(strsplit(data[metastart + 7], '>')[[1]][3], '<')[[1]][1]
)
start = F       #the start date is not always the true start, this will be used later to find it
title = grep("YEAR", data)   #this line and the next define where the data starts to be listed and ends
end = grep("Total:", data)
#makes a data frame of specific length
percip = data.frame(
month = rep(NA, end - title - 9),
day = rep(NA, end - title - 9),
year = rep(NA, end - title - 9),
maxtemp = rep(NA, end - title - 9),
mintemp = rep(NA, end - title - 9),
avgtemp = rep(NA, end - title - 9),
percip = rep(NA, end - title - 9)
)
rownames(percip) = NULL
#this goes through every line, if there is no data, it skips that line and records where the data starts
for (i in (title + 3):(end - 3)) {
if (grepl("No Data", data[i])) {
next
} #skips, below line records date of data start
if (start == F) {
meta$begin = paste(
gsub(" ", "", strsplit(data[i], '      ')[[1]][2]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][3]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][4]),
sep = '/'
)
start = T
}
percip[i - 2 - title, ] = as.double(strsplit(data[i], '    ')[[1]][2:8])
}
pdata = list(meta = meta, percip = percip)    #output dataframe
c = getwd()
setwd("C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data")
save(pdata, file = paste(meta$station, 'Rdata', sep = '.'))
setwd(c)
return(pdata)
}
a=getParkData(path)
head(a$percip)
getParkData = function(path) {
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data = readLines(path) #this grabs the text from the html connection
metastart = grep("Weather Station", data)   #finds the start of the metadata
#makes the metadata list
meta = list(
station = strsplit(strsplit(data[metastart + 1], '>')[[1]][3], '<')[[1]][1],
description = strsplit(strsplit(data[metastart + 3], '>')[[1]][3], '<')[[1]][1],
begin = strsplit(strsplit(data[metastart + 5], '>')[[1]][3], '<')[[1]][1],
end = strsplit(strsplit(data[metastart + 7], '>')[[1]][3], '<')[[1]][1]
)
start = F       #the start date is not always the true start, this will be used later to find it
title = grep("YEAR", data)   #this line and the next define where the data starts to be listed and ends
end = grep("Total:", data)
#makes a data frame of specific length
percip = data.frame(
month = rep(NA, end - title - 9),
day = rep(NA, end - title - 9),
year = rep(NA, end - title - 9),
maxtemp = rep(NA, end - title - 9),
mintemp = rep(NA, end - title - 9),
avgtemp = rep(NA, end - title - 9),
percip = rep(NA, end - title - 9)
)
rownames(percip) = NULL
#this goes through every line, if there is no data, it skips that line and records where the data starts
for (i in (title + 3):(end - 3)) {
if (grepl("No Data", data[i])) {
next
} #skips, below line records date of data start
if (start == F) {
meta$begin = paste(
gsub(" ", "", strsplit(data[i], '      ')[[1]][2]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][3]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][4]),
sep = '/'
)
start = T
}
percip[i - 2 - title, ] = as.double(strsplit(data[i], '     ')[[1]][2:8])
}
pdata = list(meta = meta, percip = percip)    #output dataframe
c = getwd()
setwd("C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data")
save(pdata, file = paste(meta$station, 'Rdata', sep = '.'))
setwd(c)
return(pdata)
}
a=getParkData(path)
head(a$percip)
getParkData = function(path) {
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data = readLines(path) #this grabs the text from the html connection
metastart = grep("Weather Station", data)   #finds the start of the metadata
#makes the metadata list
meta = list(
station = strsplit(strsplit(data[metastart + 1], '>')[[1]][3], '<')[[1]][1],
description = strsplit(strsplit(data[metastart + 3], '>')[[1]][3], '<')[[1]][1],
begin = strsplit(strsplit(data[metastart + 5], '>')[[1]][3], '<')[[1]][1],
end = strsplit(strsplit(data[metastart + 7], '>')[[1]][3], '<')[[1]][1]
)
start = F       #the start date is not always the true start, this will be used later to find it
title = grep("YEAR", data)   #this line and the next define where the data starts to be listed and ends
end = grep("Total:", data)
#makes a data frame of specific length
percip = data.frame(
month = rep(NA, end - title - 9),
day = rep(NA, end - title - 9),
year = rep(NA, end - title - 9),
percip = rep(NA, end - title - 9),
maxtemp = rep(NA, end - title - 9),
mintemp = rep(NA, end - title - 9),
avgtemp = rep(NA, end - title - 9)
)
rownames(percip) = NULL
#this goes through every line, if there is no data, it skips that line and records where the data starts
for (i in (title + 3):(end - 3)) {
if (grepl("No Data", data[i])) {
next
} #skips, below line records date of data start
if (start == F) {
meta$begin = paste(
gsub(" ", "", strsplit(data[i], '      ')[[1]][2]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][3]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][4]),
sep = '/'
)
start = T
}
percip[i - 2 - title, ] = as.double(strsplit(data[i], '     ')[[1]][2:8])
}
pdata = list(meta = meta, percip = percip)    #output dataframe
c = getwd()
setwd("C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data")
save(pdata, file = paste(meta$station, 'Rdata', sep = '.'))
setwd(c)
return(pdata)
}
a=getParkData(path)
head(a$percip)
a$percip[`:50`]
a$percip[1:50]
a$percip[,1:50]
a$percip[1:50,]
sum(is.na(a$percip))
getParkData = function(path) {
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data = readLines(path) #this grabs the text from the html connection
metastart = grep("Weather Station", data)   #finds the start of the metadata
#makes the metadata list
meta = list(
station = strsplit(strsplit(data[metastart + 1], '>')[[1]][3], '<')[[1]][1],
description = strsplit(strsplit(data[metastart + 3], '>')[[1]][3], '<')[[1]][1],
begin = strsplit(strsplit(data[metastart + 5], '>')[[1]][3], '<')[[1]][1],
end = strsplit(strsplit(data[metastart + 7], '>')[[1]][3], '<')[[1]][1]
)
start = F       #the start date is not always the true start, this will be used later to find it
title = grep("YEAR", data)   #this line and the next define where the data starts to be listed and ends
end = grep("Total:", data)
#makes a data frame of specific length
percip = data.frame(
month = rep(NA, end - title - 9),
day = rep(NA, end - title - 9),
year = rep(NA, end - title - 9),
percip = rep(NA, end - title - 9),
maxtemp = rep(NA, end - title - 9),
mintemp = rep(NA, end - title - 9),
avgtemp = rep(NA, end - title - 9)
)
rownames(percip) = NULL
#this goes through every line, if there is no data, it skips that line and records where the data starts
for (i in (title + 3):(end - 3)) {
if (grepl("No Data", data[i])) {
next
} #skips, below line records date of data start
if (start == F) {
meta$begin = paste(
gsub(" ", "", strsplit(data[i], '      ')[[1]][2]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][3]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][4]),
sep = '/'
)
start = T
}
percip[i - 2 - title, ] = as.double(strsplit(data[i], '    ')[[1]][2:8])
}
pdata = list(meta = meta, percip = percip)    #output dataframe
c = getwd()
setwd("C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data")
save(pdata, file = paste(meta$station, 'Rdata', sep = '.'))
setwd(c)
return(pdata)
}
a=getParkData(path)
head(a$percip)
getParkData = function(path) {
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data = readLines(path) #this grabs the text from the html connection
metastart = grep("Weather Station", data)   #finds the start of the metadata
#makes the metadata list
meta = list(
station = strsplit(strsplit(data[metastart + 1], '>')[[1]][3], '<')[[1]][1],
description = strsplit(strsplit(data[metastart + 3], '>')[[1]][3], '<')[[1]][1],
begin = strsplit(strsplit(data[metastart + 5], '>')[[1]][3], '<')[[1]][1],
end = strsplit(strsplit(data[metastart + 7], '>')[[1]][3], '<')[[1]][1]
)
start = F       #the start date is not always the true start, this will be used later to find it
title = grep("YEAR", data)   #this line and the next define where the data starts to be listed and ends
end = grep("Total:", data)
#makes a data frame of specific length
percip = data.frame(
month = rep(NA, end - title - 9),
day = rep(NA, end - title - 9),
year = rep(NA, end - title - 9),
percip = rep(NA, end - title - 9),
maxtemp = rep(NA, end - title - 9),
mintemp = rep(NA, end - title - 9),
avgtemp = rep(NA, end - title - 9)
)
rownames(percip) = NULL
#this goes through every line, if there is no data, it skips that line and records where the data starts
for (i in (title + 3):(end - 3)) {
if (grepl("No Data", data[i])) {
next
} #skips, below line records date of data start
if (start == F) {
meta$begin = paste(
gsub(" ", "", strsplit(data[i], '      ')[[1]][2]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][3]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][4]),
sep = '/'
)
start = T
}
percip[i - 2 - title,1:3] = as.double(strsplit(data[i], '     ')[[1]][2:8])
percip[i - 2 - title,4:7] = as.double(strsplit(data[i], '    ')[[1]][5:8])
}
pdata = list(meta = meta, percip = percip)    #output dataframe
c = getwd()
setwd("C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data")
save(pdata, file = paste(meta$station, 'Rdata', sep = '.'))
setwd(c)
return(pdata)
}
a=getParkData(path)
warnings(_)
warnings()
head(a$percip)
dim(data)
typeof(data)
i
strsplit(data[i], '    ')
strsplit(data[i], '     ')
i=45
strsplit(data[i], '     ')
strsplit(data[i], ' ')
data[i]
?gsub
gsub(data[i],'     ',' ')
gsub('     ',' ',data[i])
data[i]=gsub('     ',' ',data[i])
data[i]=gsub('    ',' ',data[i])
data[i]=gsub('   ',' ',data[i])
data[i]=gsub('  ',' ',data[i])
data[i]
as.double(strsplit(data[i], '     ')[[1]][2:8])
strsplit(data[i], ' ')
data[i]
trimws(data[i])
data[i]=trimws(data[i])
data[i]
}]
data[i]
strsplit(data[i], ' ')
strsplit(data[i], ' ')[[1]]
as.double(strsplit(data[i], ' ')[[1]][1:7])
as.numeric(strsplit(data[i], ' ')[[1]][1:7])
getParkData = function(path) {
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data = readLines(path) #this grabs the text from the html connection
metastart = grep("Weather Station", data)   #finds the start of the metadata
#makes the metadata list
meta = list(
station = strsplit(strsplit(data[metastart + 1], '>')[[1]][3], '<')[[1]][1],
description = strsplit(strsplit(data[metastart + 3], '>')[[1]][3], '<')[[1]][1],
begin = strsplit(strsplit(data[metastart + 5], '>')[[1]][3], '<')[[1]][1],
end = strsplit(strsplit(data[metastart + 7], '>')[[1]][3], '<')[[1]][1]
)
start = F       #the start date is not always the true start, this will be used later to find it
title = grep("YEAR", data)   #this line and the next define where the data starts to be listed and ends
end = grep("Total:", data)
#makes a data frame of specific length
percip = data.frame(
month = rep(NA, end - title - 9),
day = rep(NA, end - title - 9),
year = rep(NA, end - title - 9),
percip = rep(NA, end - title - 9),
maxtemp = rep(NA, end - title - 9),
mintemp = rep(NA, end - title - 9),
avgtemp = rep(NA, end - title - 9)
)
rownames(percip) = NULL
#this goes through every line, if there is no data, it skips that line and records where the data starts
for (i in (title + 3):(end - 3)) {
if (grepl("No Data", data[i])) {
next
} #skips, below line records date of data start
if (start == F) {
meta$begin = paste(
gsub(" ", "", strsplit(data[i], '      ')[[1]][2]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][3]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][4]),
sep = '/'
)
start = T
}
data[i]=gsub('     ',' ',data[i])
data[i]=gsub('    ',' ',data[i])
data[i]=gsub('   ',' ',data[i])
data[i]=gsub('  ',' ',data[i])
data[i]=trimws(data[i])
percip[i - 2 - title,] = as.double(strsplit(data[i], ' ')[[1]][1:7])
}
pdata = list(meta = meta, percip = percip)    #output dataframe
c = getwd()
setwd("C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data")
save(pdata, file = paste(meta$station, 'Rdata', sep = '.'))
setwd(c)
return(pdata)
}
a=getParkData(path)
a$percip
createPath
createPath=function(df,num){
#this function is used with the vatiable "stations" and creates the path
return(paste(df$base[num],df$time[num],df$type[num],df$measures[num],sep=''))
}
createPath
for(i in 1:39){
path=createPath(stations,i)
a=getParkData(path)
}
ls()
getwd()
setwd("C:/Users/JD/Documents/GitHub/StateParks/Dat")
setwd("C:/Users/JD/Documents/GitHub/StateParks/Data")
dir(_)
dir()
setwd("C:/Users/JD/Documents/GitHub/StateParks/Data/Location Data")
dir()
getwd()
for(i in dir()){}
for(i in dir()){load(i);print(sum(is.na(pdata$percip)))}
