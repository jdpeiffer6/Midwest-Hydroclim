strsplit(data[31],'>')
metastart=30
location=strsplit(strsplit(data[metastart+1]),'>')[3],'<')[1]
strsplit(data[metastart+1]),'>')[3]
location=strsplit(strsplit(data[metastart+1],'>')[3],'<')[1]
strsplit(data[metastart+1],'>')[3]
data[metastart+1]
strsplit(data[metastart+1],'>')
strsplit(data[metastart+1],'>')[3]
strsplit(data[metastart+1],'>')[[1]][3]
strsplit(data[metastart+1],'>')[[1]][3]
strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')
location=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1]
location
description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1]
description
metastart
metastart=28
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=station=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],endstrsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
meta
test=list(meta=meta,percip=percip)
test
names(test)
test$meta$station
test$percip$inches
path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
test=getPercipData(path)
getPercipData=function(path){
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data=readLines(path)
metastart=grep("Weather Station",data)
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
title=grep("YEAR",data)
end=grep("Total:",data)
percip=data.frame(month=rep(NA,end-title-9),day=rep(NA,end-title-9),year=rep(NA,end-title-9),inches=rep(NA,end-title-9))
rownames(percip)=NULL
for(i in (title+3):(end-3)){
percip[i-2-title,]=as.double(strsplit(data[i],'      ')[[1]][2:5])
}
pdata=list(meta=meta,percip=percip)
return(pdata)
}
test=getPercipData(path)
names(test)
test$meta
test$percip
getPercipData=function(path){
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data=readLines(path)
metastart=grep("Weather Station",data)
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
title=grep("YEAR",data)
end=grep("Total:",data)
percip=data.frame(month=rep(NA,end-title-9),day=rep(NA,end-title-9),year=rep(NA,end-title-9),inches=rep(NA,end-title-9))
rownames(percip)=NULL
for(i in (title+3):(end-3)){
percip[i-2-title,]=as.numeric(strsplit(data[i],'      ')[[1]][2:5])
}
pdata=list(meta=meta,percip=percip)
return(pdata)
}
test=getPercipData(path)
test$percip
rm(data,description,location,metastart)
rm(test,meta,percip)
test=getPercipData(path)
?grepl
path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=asp&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
test=getPercipData(path)
test$meta
test$percip
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data=readLines(path)
title=grep("YEAR",data)
data[title+3]
as.numeric(data[title+3])
getPercipData=function(path){
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data=readLines(path)
metastart=grep("Weather Station",data)
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
title=grep("YEAR",data)
end=grep("Total:",data)
percip=data.frame(month=rep(NA,end-title-9),day=rep(NA,end-title-9),year=rep(NA,end-title-9),inches=rep(NA,end-title-9))
rownames(percip)=NULL
for(i in (title+3):(end-3)){
if(grepl("No Data",data[i])){next}
percip[i-2-title,]=as.numeric(strsplit(data[i],'      ')[[1]][2:5])
}
percip = percip[complete.cases(percip),]
pdata=list(meta=meta,percip=percip)
return(pdata)
}
test2=getPercipData(path)
test2$meta
test2$percip
getPercipData=function(path){
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data=readLines(path)
metastart=grep("Weather Station",data)
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
title=grep("YEAR",data)
end=grep("Total:",data)
percip=data.frame(month=rep(NA,end-title-9),day=rep(NA,end-title-9),year=rep(NA,end-title-9),inches=rep(NA,end-title-9))
rownames(percip)=NULL
for(i in (title+3):(end-3)){
if(grepl("No Data",data[i])){next}
percip[i-2-title,]=as.numeric(strsplit(data[i],'      ')[[1]][2:5])
}
percip = percip[complete.cases(percip),]
pdata=list(meta=meta,percip=percip)
c=getwd();setwd("C:\Users\JD\Documents\College\StateParks")
save(pdata,file=paste(meta$station,'Rdata',sep='.'))
return(pdata)
}
getPercipData=function(path){
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data=readLines(path)
metastart=grep("Weather Station",data)
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
title=grep("YEAR",data)
end=grep("Total:",data)
percip=data.frame(month=rep(NA,end-title-9),day=rep(NA,end-title-9),year=rep(NA,end-title-9),inches=rep(NA,end-title-9))
rownames(percip)=NULL
for(i in (title+3):(end-3)){
if(grepl("No Data",data[i])){next}
percip[i-2-title,]=as.numeric(strsplit(data[i],'      ')[[1]][2:5])
}
percip = percip[complete.cases(percip),]
pdata=list(meta=meta,percip=percip)
c=getwd();setwd("C:\\Users\\JD\\Documents\\College\\StateParks")
save(pdata,file=paste(meta$station,'Rdata',sep='.'))
return(pdata)
}
test2=getPercipData(path)
test2$meta
?rnorm
library(xlsx)
xlsx::
xlsx.read
library(xlsxjars)
install.packages("xlsx")
library(xlsx)
library(rJava)
install.packages("rJava")
install.packages("xlsx")
library(xlsx)
library(rJava)
library(xlsx)
install.packages(xlsx)
install.packages("xlsx")
library(xlsx)
a
library(readxl)
Links <- read_excel("C:\\Users\\JD\\Documents\\College\\StateParks\\Links.xlsx",
col_names = FALSE)
View(Links)
getwd()
links=Links
save(links,file='links.Rdata')
View(links)
rm(Links)
rm(test)
rm(test2)
rm(dat)
rm(data)
rm(path)
rm(title)
dim(links)
links[,3]
toString
toString(links)
testtoString(links)
test=toString(links)
dim(test)
length(test)
View(links)
View(links)
links[1,3]
links[1,3]
test=links[1,3]
toString(test)
for(i in 1:39){links[i,1]=toString(links[i,1])}
for(i in 1:39){links[i,2]=toString(links[i,2])}
for(i in 1:39){links[i,3]=toString(links[i,3])}
links
links[,3]
links[1,3]
?type.convert
sapply(links, toString)
a=sapply(links, toString)
dim(a
)
length(a)
i=1
path=links[i,3]
path
path=toString(links[i,3])
path
for(i in 1:dim(links[,3])){
path=toString(links[i,3])
a=getPercipData(path)
}
dim(links[,3])
getPercipData
getPercipData=function(path){
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data=readLines(path)
metastart=grep("Weather Station",data)
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
title=grep("YEAR",data)
end=grep("Total:",data)
percip=data.frame(month=rep(NA,end-title-9),day=rep(NA,end-title-9),year=rep(NA,end-title-9),inches=rep(NA,end-title-9))
rownames(percip)=NULL
for(i in (title+3):(end-3)){
if(grepl("No Data",data[i])){next}
percip[i-2-title,]=as.numeric(strsplit(data[i],'      ')[[1]][2:5])
}
percip = percip[complete.cases(percip),]
pdata=list(meta=meta,percip=percip)
c=getwd();setwd("C:\\Users\\JD\\Documents\\College\\StateParks\\Data")
save(pdata,file=paste(meta$station,'Rdata',sep='.'));setwd(c)
return(pdata)
}
for(i in 1:dim(links[,3])[1]){
path=toString(links[i,3])
a=getPercipData(path)
}
i
links[,32]
links[32,]
for(i in 32:dim(links[,3])[1]){
if(!is.na(links[,3])){
path=toString(links[i,3])
a=getPercipData(path)}
}
i
for(i in 32:dim(links[,3])[1]){
if(!is.na(links[i,3])){
path=toString(links[i,3])
a=getPercipData(path)}
}
i
is.na(links[i,3])
links[i,3]
is.na(links[i,3])
links[i,3]==NA
data.frame(links)
a=data.frame(links)
a[,3]
links=data.frame(links)
getwd()
save(links,file='links.Rdata')
for(i in 32:dim(links[,3])[1]){
if(links[i,3]!='NA'){
path=toString(links[i,3])
a=getPercipData(path)}
}
dim(links)
dim(links[,3])
links
dim(links)
links[,3]
dim(links[,3])
dim(links)[1]
for(i in 32:dim(links)[1]){
if(links[i,3]!='NA'){
path=toString(links[i,3])
a=getPercipData(path)}
}
dir(C:\Users\JD\Documents\College\StateParks\Data)
dir('C:\\Users\\JD\\Documents\\College\\StateParks\\Data')
a=dir('C:\\Users\\JD\\Documents\\College\\StateParks\\Data')
cbind(a,links[,1])
rbind(a,links[,1])
View(rbind(a,links[,1]))
links[6,3]
links[6,3]=
'http://agebb.missouri.edu/weather/history/report.asp?station_prefix=but&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70'
for(i in 6){
if(links[i,3]!='NA'){
path=toString(links[i,3])
a=getPercipData(path)}
}
for(i in 1:39){print(length(links[i,3]))}
links[1,3]
links[1,3][1]
links[1,3][[1]]
links[2,3]
links[3,3]
links[5,3]
links[9,3]
links[10,3]
substr(path,1,200)
substr(path,1,150)
substr(path,1,175)
path=paste(substr(path,1,174),'&field_elements=3&field_elements=73&field_elements=70
')
path
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
path=paste(substr(path,1,174),'&field_elements=3&field_elements=73&field_elements=70',sep='')
path
data=readLines(path)
metastart=grep("Weather Station",data)
meta=list(station=strsplit(strsplit(data[metastart+1],'>')[[1]][3],'<')[[1]][1],description=strsplit(strsplit(data[metastart+3],'>')[[1]][3],'<')[[1]][1],begin=strsplit(strsplit(data[metastart+5],'>')[[1]][3],'<')[[1]][1],end=strsplit(strsplit(data[metastart+7],'>')[[1]][3],'<')[[1]][1])
meta
title=grep("YEAR",data)
end=grep("Total:",data)
path
rm(end)
rm(data)
rm(i)
rm(metastart,path,title)
a
rm(a)
rm(meta)
setwd('C:\\Users\\JD\\Documents\\College\\StateParks\\Data')
load(dir()[1])
pdata$meta
pdata$percip$inches
plot(pdata$percip$inches)
install.packages("hydroTSM")
install.packages("climdex.pcic")
library(climdex.pcic)
ls()
library(climdex.pcic)
install.packages("C:/Users/JD/Downloads/RClimDex-1.1.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/JD/Downloads/RClimDex-1.1.tar.gz", repos = NULL, type = "source")
climdex.cwd
?climdex.cwd
setwd("C:\\Users\\JD\\Documents\\College\\StateParks\\Data")
ls()
dir()
load(dir()[1])
names(pdata)
pdata$percip
names(pdata$percip)
climdexInput.raw
tmax.dates <- as.PCICt(do.call(paste, ec.1018935.tmax[,c("year", "jday")]), format="%Y %j", cal="gregorian")
tmax.dates
names(pdata)
dataFormat=function(df){
#correctly formats the dates for use in climdex
pdata$percip$date=paste(pdata$year,pdata$month,pdata$day,sep="-")
}
test=dateFormat(pdata)
dateFormat=function(df){
#correctly formats the dates for use in climdex
pdata$percip$date=paste(pdata$year,pdata$month,pdata$day,sep="-")
}
test=dateFormat(pdata)
dateFormat=function(df){
#correctly formats the dates for use in climdex
df$percip$date=paste(df$year,df$month,df$day,sep="-")
}
test=dateFormat(pdata)
rm(dataFormat)
df=pdata
df$percip$date=paste(df$year,df$month,df$day,sep="-")
#correctly formats the dates for use in climdex
df$percip$date=NA
df$perci
df$percip
df$percip$date=paste(df$year,df$month,df$day,sep="-")
df$percip$date
df$percip$date[1]
df$year
df$percip$date=paste(df$percip$year,df$percip$month,df$percip$day,sep="-")
df$percip$date
dateFormat=function(df){
#correctly formats the dates for use in climdex
df$percip$date=NA
df$percip$date=paste(df$percip$year,df$percip$month,df$percip$day,sep="-")
drops <- c("year","month","day")
df[ , !(names(df) %in% drops)]
return(df)
}
names(pdata$percip)
test=dateFormat(pdata)
dateFormat=function(df){
#correctly formats the dates for use in climdex
df$percip$date=NA
df$percip$date=paste(df$percip$year,df$percip$month,df$percip$day,sep="-")
drops <- c("year","month","day")
df$percip[ , !(names(df$percip) %in% drops)]
return(df)
}
test=dateFormat(pdata)
names(test)
names(test$percip)
head(test$percip)
test$percip$date
dateFormat=function(df){
#correctly formats the dates for use in climdex
df$percip$date=NA
df$percip$date=paste(df$percip$year,df$percip$month,df$percip$day,sep="-")
drops <- c("year","month","day")
df$percip <- subset(df$percip, select = -c("day"))
return(df)
}
test=dateFormat(pdata)
dateFormat=function(df){
#correctly formats the dates for use in climdex
df$percip$date=NA
df$percip$date=paste(df$percip$year,df$percip$month,df$percip$day,sep="-")
drops <- c("year","month","day")
df$percip <- subset(df$percip, select = -c("day","month"))
return(df)
}
test=dateFormat(pdata)
dateFormat=function(df){
#correctly formats the dates for use in climdex
df$percip$date=NA
df$percip$date=paste(df$percip$year,df$percip$month,df$percip$day,sep="-")
df$percip <- subset(df$percip, select = -c(day))
return(df)
}
test=dateFormat(pdata)
test$percip
names(test$percip)
dateFormat=function(df){
#correctly formats the dates for use in climdex
df$percip$date=NA
df$percip$date=paste(df$percip$year,df$percip$month,df$percip$day,sep="-")
df$percip <- subset(df$percip, select = -c(day,month,year))
return(df)
}
names(test$percip)
names(test$percip)
test=dateFormat(pdata)
names(test$percip)
pdata=dateFormat(pdata)
names(pdata)
names(pdata$percip)
head(pdata$percip)
tmax.dates
prec.dates <- as.PCICt(do.call(paste, ec.1018935.prec[,c("year", "jday")]), format="%Y %j", cal="gregorian")
head(prec.dates)
ec.1018935.prec$ONE_DAY_PRECIPITATION
ec.1018935.tmax$MAX_TEMP
climdex.input.raw(pdata$percip$inches,pdata$percip$date,base.range=c(2000,2019))
climdexInput.raw(pdata$percip$inches,pdata$percip$date,base.range=c(2000,2019))
ec.1018935
climdexInput.raw(prec=pdata$percip$inches,perc.dates=pdata$percip$date,base.range=c(2000,2019))
climdexInput.raw(prec=pdata$percip$inches,prec.dates=pdata$percip$date,base.range=c(2000,2019))
climdexInput(data=pdata$percip$inches,dates=pdata$percip$date,base.range=c(2000,2019))
climdexInput.raw(prec=pdata$percip$inches,prec.dates=pdata$percip$date,base.range=c(2000,2019))
as.PCICt()
as.PCICt
?as.PCICt
climdexInput.raw(prec=pdata$percip$inches,prec.dates=as.PCICt(pdata$percip$date),base.range=c(2000,2019))
??as.PCICt
as.PCICt(pdata$percip$date)
as.PCICt(pdata$percip$date,cal="365_daty")
as.PCICt(pdata$percip$date,cal="365_day")
climdexInput.raw(prec=pdata$percip$inches,prec.dates=as.PCICt(pdata$percip$date,cal="365_day"),base.range=c(2000,2019))
ci=climdexInput.raw(prec=pdata$percip$inches,prec.dates=as.PCICt(pdata$percip$date,cal="365_day"),base.range=c(2000,2019))
names(ci)
ci
climdex.cwd(ci)
xlsx.read
library(xlsx)
library(xlsx)
C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Documents\\Links.xlsx
'C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Documents\\Links.xlsx'
excelpath='C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Documents\\Links.xlsx'
test=xlsx.read(excelpath)
test=read.xlsx(excelpath)
test=read.xlsx(excelpath,1)
test
typeof(test)
names(test)
test=read.xlsx(excelpath,1)
names(test)
test$Link
stations=test
View(test)
rm(test)
stations$Link[1]
stations$Link[2]
substr(stations$Link[2],1,100)
substr(stations$Link[1],1,100)
substr(stations$Link[1],80)
substr(stations$Link[1],1,80)
substr(stations$Link[1],1,73)
substr(stations$Link[1],1,1)
substr(stations$Link[1],1,71)
stations$base=substr(stations$Link,1,71)
stations$base
stations$base[33]='http://agebb.missouri.edu/weather/history/report.asp?station_prefix=sen'
stations$base
station$time=
'&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019
'
'&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019'
stations$time=rep("&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019",39)
stations$time
'&period_type=1&convert=1&field_elements=70'
'&period_type=1&convert=2&field_elements=70'
stations$type='&period_type=1&convert=2'
stations$type=rep('&period_type=1&convert=2',39)
stations$type
stations$measures=
'&field_elements=70&field_elements=3&field_elements=51&field_elements=23'
stations$measures=rep('&field_elements=70&field_elements=3&field_elements=51&field_elements=23',39)
stations$measures
getwd()
setwd("C:/Users/JD/Documents/GitHub/StateParks/Data")
save(stations,file="stations")
save(stations,file="stations.Rdata")
