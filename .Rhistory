load("~/GitHub/StateParks/Data/Location Data/Columbia-Capen Park, Boone County, MO.Rdata")
View(pdata$percip)
sum(is.na(pdata$percip))
78/7
7+NA
dim(pdata$percip)
for(i in 1:3205){}
for(i in 1:3205){
if(sum(is.na(pdata$percip[i,]))>0){print(pdata$percip[i,]))>0)}}
if(sum(is.na(pdata$percip[i,]))>0){print(pdata$percip[i,])>0)}}
if(sum(is.na(pdata$percip[i,]))>0){print(pdata$percip[i,])>0))}}
for(i in 1:3205){
if(sum(is.na(pdata$percip[i,]))>0){print(pdata$percip[i,])}}
createPath(stations,12)
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
load(i)
print(i)
#print(sum(is.na(pdata$percip))/7)
for(i in 1:dim(pdata$percip)[1]){
if(sum(is.na(pdata$percip[i,]))>0){print(pdata$percip[i,])}}
}
load("~/GitHub/StateParks/Data/Location Data/Columbia-Capen Park, Boone County, MO.Rdata")
pdata$percip[2095,]
dim(percip)
dim(pdata$percip)
dim(pdata$percip(complete.cases(pdata$percip))
)
dim(na.omit(pdata$percip))
View(pdata$percip)
for(i in 1:dim(pdata$percip)[1]){
if(sum(is.na(pdata$percip[i,]))>0){print(pdata$percip[i,])}}
tail(pdata$percip)
i
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
name=load(i)
print(i)
#print(sum(is.na(pdata$percip))/7)
#for(i in 1:dim(pdata$percip)[1]){
#if(sum(is.na(pdata$percip[i,]))>0){print(pdata$percip[i,])}}
}
getParkData = function(path) {
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data = readLines(path) #this grabs the text from the html connection
metastart = grep("Weather Station", data)   #finds the start of the metadata
#makes the metadata list
meta = list(
station = strsplit(strsplit(data[metastart + 1], '>')[[1]][3], '<')[[1]][1],
description = strsplit(strsplit(data[metastart + 3], '>')[[1]][3], '<')[[1]][1],
begin = strsplit(strsplit(data[metastart + 5], '>')[[1]][3], '<')[[1]][1],
end = strsplit(strsplit(data[metastart + 7], '>')[[1]][3], '<')[[1]][1]
)
start = F       #the start date is not always the true start, this will be used later to find it
title = grep("YEAR", data)   #this line and the next define where the data starts to be listed and ends
end = grep("Total:", data)
#makes a data frame of specific length
weath = data.frame(
month = rep(NA, end - title - 9),
day = rep(NA, end - title - 9),
year = rep(NA, end - title - 9),
weath = rep(NA, end - title - 9),
maxtemp = rep(NA, end - title - 9),
mintemp = rep(NA, end - title - 9),
avgtemp = rep(NA, end - title - 9)
)
rownames(weath) = NULL
#this goes through every line, if there is no data, it skips that line and records where the data starts
for (i in (title + 3):(end - 3)) {
if (grepl("No Data", data[i])) {
next
} #skips, below line records date of data start
if (start == F) {
meta$begin = paste(
gsub(" ", "", strsplit(data[i], '      ')[[1]][2]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][3]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][4]),
sep = '/'
)
start = T
}
data[i] = gsub('     ', ' ', data[i])     #gets all the annoying spaces out of the data
data[i] = gsub('    ', ' ', data[i])
data[i] = gsub('   ', ' ', data[i])
data[i] = gsub('  ', ' ', data[i])
data[i] = trimws(data[i])     #gets the first and last space out
weath[i - 2 - title,] = as.double(strsplit(data[i], ' ')[[1]][1:7])  #puts data into data frame
}
weath = na.omit(weath)   #leaves out NA rows. these are caused by years without data
wdata = list(meta = meta, weath = weath)    #output dataframe
c = getwd()
setwd("C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data")
save(pdata, file = paste(meta$station, 'Rdata', sep = '.'))
setwd(c)
return(pdata)
}
for(i in 1:39){
path=createPath(stations,i)
a=getParkData(path)
}
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
name=load(i)
print(i)
print(sum(is.na(wdata$weath))/7)
#for(i in 1:dim(wdata$weath)[1]){
#if(sum(is.na(wdata$weath[i,]))>0){print(wdata$weath[i,])}}
}
getParkData()
getParkData
#useful to check what files contain NA
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
name=load(i)
print(i)
wdata=pdata;rm(pdata)
print(sum(is.na(wdata$weath))/7)
#for(i in 1:dim(wdata$weath)[1]){
#if(sum(is.na(wdata$weath[i,]))>0){print(wdata$weath[i,])}}
}
#useful to check what files contain NA
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
name=load(i)
print(i)
wdata=pdata;rm(pdata)
print(sum(is.na(wdata$weath))/7)
#for(i in 1:dim(wdata$weath)[1]){
#if(sum(is.na(wdata$weath[i,]))>0){print(wdata$weath[i,])}}
save(file=i,wdata)
}
setwd('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')
for(i in dir('C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data')){
name=load(i)
print(i)
print(sum(is.na(wdata$weath))/7)
#for(i in 1:dim(wdata$weath)[1]){
#if(sum(is.na(wdata$weath[i,]))>0){print(wdata$weath[i,])}}
}
dailyavg = matrix(nrow = 366, ncol = 5, data = 0)   #makes a matrix with a column for every day +1 more for the number of days it was aquired over
for (i in 1:10) {
x = as.numeric(strftime(
paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
),
"%j"
))    #converts date to a type readable by strftime and then converts that number to a day number
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
dim(wdata$weath)
wdata
View(dailyavg)
getParkData = function(path) {
#path="http://agebb.missouri.edu/weather/history/report.asp?station_prefix=alb&start_month=1&end_month=10&start_day=1&end_day=1&start_year=2000&end_year=2019&period_type=1&convert=1&field_elements=70"
data = readLines(path) #this grabs the text from the html connection
metastart = grep("Weather Station", data)   #finds the start of the metadata
#makes the metadata list
meta = list(
station = strsplit(strsplit(data[metastart + 1], '>')[[1]][3], '<')[[1]][1],
description = strsplit(strsplit(data[metastart + 3], '>')[[1]][3], '<')[[1]][1],
begin = strsplit(strsplit(data[metastart + 5], '>')[[1]][3], '<')[[1]][1],
end = strsplit(strsplit(data[metastart + 7], '>')[[1]][3], '<')[[1]][1]
)
start = F       #the start date is not always the true start, this will be used later to find it
title = grep("YEAR", data)   #this line and the next define where the data starts to be listed and ends
end = grep("Total:", data)
#makes a data frame of specific length
weath = data.frame(
month = rep(NA, end - title - 9),
day = rep(NA, end - title - 9),
year = rep(NA, end - title - 9),
weath = rep(NA, end - title - 9),
maxtemp = rep(NA, end - title - 9),
mintemp = rep(NA, end - title - 9),
avgtemp = rep(NA, end - title - 9)
)
rownames(weath) = NULL
#this goes through every line, if there is no data, it skips that line and records where the data starts
for (i in (title + 3):(end - 3)) {
if (grepl("No Data", data[i])) {
next
} #skips, below line records date of data start
if (start == F) {
meta$begin = paste(
gsub(" ", "", strsplit(data[i], '      ')[[1]][2]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][3]),
gsub(" ", "", strsplit(data[i], '      ')[[1]][4]),
sep = '/'
)
start = T
}
data[i] = gsub('     ', ' ', data[i])     #gets all the annoying spaces out of the data
data[i] = gsub('    ', ' ', data[i])
data[i] = gsub('   ', ' ', data[i])
data[i] = gsub('  ', ' ', data[i])
data[i] = trimws(data[i])     #gets the first and last space out
weath[i - 2 - title,] = as.double(strsplit(data[i], ' ')[[1]][1:7])  #puts data into data frame
}
weath = na.omit(weath)   #leaves out NA rows. these are caused by years without data
wdata = list(meta = meta, weath = weath)    #output dataframe
c = getwd()
setwd("C:\\Users\\JD\\Documents\\GitHub\\StateParks\\Data\\Location Data")
save(wdata, file = paste(meta$station, 'Rdata', sep = '.'))
setwd(c)
return(wdata)
}
##this code I used to run the getParkData() function on all of the links and make sure it was returning the right data!
for(i in 1){
path=createPath(stations,i)
a=getParkData(path)
}
createPath=function(df,num){
#this function is used with the vatiable "stations" and creates the path
return(paste(df$base[num],df$time[num],df$type[num],df$measures[num],sep=''))
}
for(i in 1:39){
path=createPath(stations,i)
a=getParkData(path)
}
c(i/39,' '
dailyavg = matrix(nrow = 366, ncol = 5, data = 0)   #makes a matrix with a column for every day +1 more for the number of days it was aquired over
for (i in 1:10) {
x = as.numeric(strftime(
paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
),
"%j"
))    #converts date to a type readable by strftime and then converts that number to a day number
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
View(dailyavg)
i
x
x = as.numeric(strftime(
paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
),
"%j"
))
x
i=1
x = as.numeric(strftime(
paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
),
"%j"
))
x
paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
)
View(wdata)
load("~/GitHub/StateParks/Data/Location Data/Albany, Gentry County, MO.Rdata")
names(wdata)
dailyavg = matrix(nrow = 366, ncol = 5, data = 0)   #makes a matrix with a column for every day +1 more for the number of days it was aquired over
for (i in 1:10) {
x = as.numeric(strftime(
paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
),
"%j"
))    #converts date to a type readable by strftime and then converts that number to a day number
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
getAverages=function(wdata){
dailyavg = matrix(nrow = 366, ncol = 5, data = 0)   #makes a matrix with a column for every day +1 more for the number of days it was aquired over
for (i in 1:10) {
x = as.numeric(strftime(
paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
),
"%j"
))    #converts date to a type readable by strftime and then converts that number to a day number
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
return(dailyavg)
}
getAverages=function(wdata){
dailyavg = matrix(nrow = 366, ncol = 5, data = 0)   #makes a matrix with a column for every day +1 more for the number of days it was aquired over
for (i in 1:dim(wdata)[1]) {
x = as.numeric(strftime(
paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
),
"%j"
))    #converts date to a type readable by strftime and then converts that number to a day number
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
return(dailyavg)
}
test=getAverages(wdata)
getAverages=function(wdata){
dailyavg = matrix(nrow = 366, ncol = 5, data = 0)   #makes a matrix with a column for every day +1 more for the number of days it was aquired over
for (i in 1:dim(wdata$weath)[1]) {
x = as.numeric(strftime(
paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
),
"%j"
))    #converts date to a type readable by strftime and then converts that number to a day number
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
return(dailyavg)
}
test=getAverages(wdata)
View(test)
aste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
)
paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
)
strftime("2016-2-29")
strftime("2016-2-29","%j")
strftime("2017-2-29","%j")
strftime("2017-12-31","%j")
strftime("2016-12-31","%j")
??strftime
?grepl
x1
x1="2012-2-29"
leaps=c("2000","2004","2008","2012","2016")
grepl(leaps,x1)
leaps=c("2000|2004|2008|2012|2016")
grepl(leaps,x1)
head(wdata$weath)
getAverages(wdata)
getAverages=function(wdata){
dailyavg = matrix(nrow = 366, ncol = 5, data = 0)   #makes a matrix with a column for every day +1 more for the number of days it was aquired over
for (i in 1:365) {
x1=paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
) #converts date to a type readable by strftime
x = as.numeric(strftime(x1))   #converts that to a number
leaps=c("2000|2004|2008|2012|2016")
if(grepl("2-29",x1)){x=366
}else if(grepl(leaps,x1)&&x>=60){x=x-1}
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
return(dailyavg)
}
dim(wdata$weath)[1]
getAverages(wdata)
dailyavg = matrix(nrow = 366, ncol = 5, data = 0)   #makes a matrix with a column for every day +1 more for the number of days it was aquired over
for (i in 1:365) {
x1=paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
) #converts date to a type readable by strftime
x = as.numeric(strftime(x1))   #converts that to a number
leaps=c("2000|2004|2008|2012|2016")
if(grepl("2-29",x1)){x=366
}else if(grepl(leaps,x1)&&x>=60){x=x-1}
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
i
x1
if(grepl("2-29",x1)){x=366
}
else if(grepl(leaps,x1)&&x>=60){x=x-1}
else if(grepl(leaps,x1)&&x>=60){x=x-1}
grepl(leaps,x1)
x>=60
x>60
61>60
x
x = as.numeric(strftime(x1))
x
x1
x = as.numeric(strftime(x1),'%j')   #converts that to a number
x1
x = as.numeric(strftime(x1,'%j'))   #converts that to a number
x
getAverages=function(wdata){
dailyavg = matrix(nrow = 366, ncol = 5, data = 0)   #makes a matrix with a column for every day +1 more for the number of days it was aquired over
for (i in 1:365) {
x1=paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
) #converts date to a type readable by strftime
x = as.numeric(strftime(x1,'%j'))   #converts that to a number
leaps=c("2000|2004|2008|2012|2016")
if(grepl("2-29",x1)){x=366
}else if(grepl(leaps,x1) && x>60) {x=x-1}
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
return(dailyavg)
}
for (i in 1:365) {
x1=paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
) #converts date to a type readable by strftime
x = as.numeric(strftime(x1,'%j'))   #converts that to a number
leaps=c("2000|2004|2008|2012|2016")
if(grepl("2-29",x1)){x=366
}else if(grepl(leaps,x1) && x>60) {x=x-1}
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
for (i in 1:365) {
x1=paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
) #converts date to a type readable by strftime
x = as.numeric(strftime(x1,'%j'))   #converts that to a number
leaps=c("2000|2004|2008|2012|2016")
if(grepl("2-29",x1)){print(x);x=366
}else if(grepl(leaps,x1) && x>60) {x=x-1}
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
i=364
x1=paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
)
x1
i=60
x1=paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
)
x1
for (i in 1:365) {
x1=paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
) #converts date to a type readable by strftime
x = as.numeric(strftime(x1,'%j'))   #converts that to a number
leaps=c("2000|2004|2008|2012|2016")
if(grepl("-2-29",x1)){print(x);x=366
}else if(grepl(leaps,x1) && x>60) {x=x-1}
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
dailyavg = matrix(nrow = 366, ncol = 5, data = 0)   #makes a matrix with a column for every day +1 more for the number of days it was aquired over
for (i in 1:365) {
x1=paste(
wdata$weath$year[i],
wdata$weath$month[i],
wdata$weath$day[i],
sep = '-'
) #converts date to a type readable by strftime
x = as.numeric(strftime(x1,'%j'))   #converts that to a number
leaps=c("2000|2004|2008|2012|2016")
if(grepl("-2-29",x1)){print(x);x=366
}else if(grepl(leaps,x1) && x>60) {x=x-1}
dailyavg[x, 1:4] = as.numeric(wdata$weath[i, 4:7]) + dailyavg[x, 1:4]     #puts in the respective data
dailyavg[x, 5] = dailyavg[x, 5] + 1    #adds a number for the total days averaged over
}
wdata$weath[1:100,]
createPath
